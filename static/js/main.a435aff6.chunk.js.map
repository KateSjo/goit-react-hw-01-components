{"version":3,"sources":["components/social-profile/SocialProfile.module.css","components/friend-list/FriendListCard.module.css","components/statistics/StatisticCard.module.css","components/statistics/Statistics.module.css","components/transaction-history/TransactionsList.module.css","components/friend-list/FriendList.module.css","components/social-profile/3135715.svg","components/social-profile/SocialProfile.js","components/statistics/StatisticCard.js","components/statistics/Statistics.js","components/transaction-history/TransactionsLine.js","components/transaction-history/TransactionsList.js","components/friend-list/FriendListCard.js","components/friend-list/FriendList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","followers","views","likes","className","styles","profile","description","src","alt","stats","lable","quantity","defaultProps","img","StatisticCard","label","percentage","key","item","StatisticsList","statistics","title","stat__list","Statistics","map","Statistic","id","TransactionsLine","type","amount","currency","rey","TransactionsList","transaction__history","TransactionsData","TransactionData","FriendsCard","isOnline","isOffline","width","FriendsList","friend__list","Friends","Friend","App","socials","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a435aff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"SocialProfile_profile__PR1tF\",\"description\":\"SocialProfile_description__1Qe5E\",\"avatar\":\"SocialProfile_avatar__3njI_\",\"name\":\"SocialProfile_name__2zmaG\",\"tag\":\"SocialProfile_tag__1RYXv\",\"location\":\"SocialProfile_location__379P_\",\"stats\":\"SocialProfile_stats__3WLVs\",\"lable\":\"SocialProfile_lable__2Z6EG\",\"quantity\":\"SocialProfile_quantity__dl6xC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListCard_item__35PNp\",\"isOnline\":\"FriendListCard_isOnline__iJBRP\",\"isOffline\":\"FriendListCard_isOffline__QT6Gw\",\"avatar\":\"FriendListCard_avatar__1sDa1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticCard_item__U5qPG\",\"label\":\"StatisticCard_label__3Rj68\",\"percentage\":\"StatisticCard_percentage__3jz-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat__list\":\"Statistics_stat__list__3QTuc\",\"statistics\":\"Statistics_statistics__3_aGa\",\"title\":\"Statistics_title__2S6_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"TransactionsList_transaction__history__3UtW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend__list\":\"FriendList_friend__list__eYdCH\"};","export default __webpack_public_path__ + \"static/media/3135715.15422c43.svg\";","import React from 'react';\nimport img from './3135715.svg';\nimport PropTypes from 'prop-types';\nimport styles from './SocialProfile.module.css';\n\nconst Profile = ({ avatar, name, tag, location, followers, views, likes }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className={styles.lable}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={styles.lable}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={styles.lable}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nProfile.defaultProps = {\n  avatar: img,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StatisticCard.module.css';\n\nconst StatisticCard = ({ label, percentage, key }) => {\n  return (\n    <li key={key} className={styles.item}>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </li>\n  );\n};\n\nStatisticCard.propTypes = {\n  key: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticCard;\n","import React from 'react';\nimport Statistics from '../../statistical-data.json';\nimport StatisticCard from './StatisticCard';\nimport styles from './Statistics.module.css';\n\nconst StatisticsList = () => (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>Upload stats</h2>\n    <ul className={styles.stat__list}>\n      {Statistics.map(Statistic => (\n        <StatisticCard\n          key={Statistic.id}\n          label={Statistic.label}\n          percentage={Statistic.percentage}\n        />\n      ))}\n    </ul>\n  </section>\n);\nexport default StatisticsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionsLine = ({ id, type, amount, currency }) => {\n  return (\n    <tr rey={id}>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionsLine.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionsLine;\n","import React from 'react';\nimport TransactionsData from '../../transactions.json';\nimport TransactionsLine from './TransactionsLine';\nimport styles from './TransactionsList.module.css';\n\nconst TransactionsList = () => (\n  <table className={styles.transaction__history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {TransactionsData.map(TransactionData => (\n        <TransactionsLine\n          id={TransactionData.id}\n          type={TransactionData.type}\n          amount={TransactionData.amount}\n          currency={TransactionData.currency}\n        />\n      ))}\n    </tbody>\n  </table>\n);\nexport default TransactionsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport img from '../social-profile/3135715.svg';\nimport styles from './FriendListCard.module.css';\n\nconst FriendsCard = ({ key, avatar, name, isOnline }) => {\n  return (\n    <li key={key} className={styles.item}>\n      <span\n        className={isOnline === true ? styles.isOnline : styles.isOffline}\n      ></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"80\" />\n      <p>{name}</p>\n    </li>\n  );\n};\n\nFriendsCard.defaultProps = {\n  avatar: img,\n};\n\nFriendsCard.propTypes = {\n  key: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendsCard;\n","import React from 'react';\nimport Friends from '../../friends.json';\nimport FriendsCard from './FriendListCard';\nimport styles from './FriendList.module.css';\n\nconst FriendsList = () => (\n  <ul className={styles.friend__list}>\n    {Friends.map(Friend => (\n      <FriendsCard\n        key={Friend.id}\n        avatar={Friend.avatar}\n        name={Friend.name}\n        isOnline={Friend.isOnline}\n      />\n    ))}\n  </ul>\n);\nexport default FriendsList;\n","import React from 'react';\nimport Profile from './components/social-profile/SocialProfile';\nimport socials from './social-profile.json';\nimport StatisticsList from './components/statistics/Statistics';\nimport TransactionsList from './components/transaction-history/TransactionsList';\nimport FriendsList from './components/friend-list/FriendList';\n\nconst App = () => {\n  return (\n    <div>\n      <FriendsList />\n      <TransactionsList />\n      <StatisticsList />\n      <Profile\n        avatar={socials.avatar}\n        name={socials.name}\n        tag={socials.tag}\n        location={socials.location}\n        followers={socials.stats.followers}\n        views={socials.stats.views}\n        likes={socials.stats.likes}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}